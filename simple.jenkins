#!groovy

pipeline {
    agent any
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timestamps()
    }
    
    environment {      
      ACCESS_KEY = credentials('jenkins_github_key')
      
      PROJECT_NAME = "Super Duper"
      TEXT   = "Something text"
    }
    
    parameters {
      string(name: 'FILE', defaultValue: 'jenkins', description: 'jenkins')
      choice(name: 'CHOICE', choices: ['One', 'Two', 'jenkins'], description: 'choice')
    }

    stages {
        stage('Build') {
            steps {
               echo "Start Build"     
               deleteDir()
               git( credentialsId: 'jenkins_github_key',
                    url: 'git@github.com:iteegi/jenkins-files.git')
               echo "Start ${PROJECT_NAME} project"
               sh 'pwd'
               echo "End Build"
            }
        }
        stage('Test') {
            steps {
                echo "Start Test"
                echo "Testing.......${TEXT}"
                echo "---------------------"
                sh "ls -la"
                sh '''
                   echo "Line1"
                   echo "Line2"
                '''
                echo "---------------------"
                echo "---> ${params.FILE}"
                echo "End Test"
            }
        }
        
        stage("Test-FALSE") {
            when {
                expression {
                    return false
                }
            }
            steps {
                echo "Test-FALSE"
            }
        }
        
        stage("Test-TRUE") {
            when {
                expression {
                    params.CHOICE == params.FILE
                }
            }
            steps {
                echo "Test-TRUE"
            }
        }
        
        stage('Deploy') {
            steps {
                echo "Start Deploy"                
                sh 'echo "SSH passphrase is $ACCESS_KEY"'
                sh 'echo "SSH passphrase is $ACCESS_KEY_USR"'
                sh 'echo "SSH passphrase is $ACCESS_KEY_PSW"'                
                echo "Build version ${BUILD_NUMBER}"
                echo "Choice: ${params.CHOICE}"
                echo "End Deploy"
            }
        }
    }
}
